---
services:
  db:
    image: "postgres:17.4-alpine"
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${MT_SKIN_SERVER_DB_USER}
      - POSTGRES_PASSWORD=${MT_SKIN_SERVER_DB_PASSWORD}
      - POSTGRES_DB=${MT_SKIN_SERVER_DB_NAME}
      - DATABASE_HOST=${MT_SKIN_SERVER_DB_HOST}
    expose:
      - 5432
    volumes:
      - db:/var/lib/postgresql/data

  server:
    # image: ghcr.io/afcms/luanti-skin-server:master
    build:
      dockerfile: Dockerfile
      target: production
    environment:
      - MT_SKIN_SERVER_DB_USER=${MT_SKIN_SERVER_DB_USER}
      - MT_SKIN_SERVER_DB_PASSWORD=${MT_SKIN_SERVER_DB_PASSWORD}
      - MT_SKIN_SERVER_DB_NAME=${MT_SKIN_SERVER_DB_NAME}
      - MT_SKIN_SERVER_DB_HOST=${MT_SKIN_SERVER_DB_HOST}
      - MT_SKIN_SERVER_DB_PORT=${MT_SKIN_SERVER_DB_PORT}
      - MT_SKIN_SERVER_DATABASE_LOGGING=${MT_SKIN_SERVER_DATABASE_LOGGING}
      - MT_SKIN_SERVER_OAUTH_REDIRECT_HOST=${MT_SKIN_SERVER_OAUTH_REDIRECT_HOST}
      - MT_SKIN_SERVER_OAUTH_CONTENTDB_CLIENT_ID=${MT_SKIN_SERVER_OAUTH_CONTENTDB_CLIENT_ID}
      - MT_SKIN_SERVER_OAUTH_CONTENTDB_CLIENT_SECRET=${MT_SKIN_SERVER_OAUTH_CONTENTDB_CLIENT_SECRET}
      - MT_SKIN_SERVER_OAUTH_GITHUB_CLIENT_ID=${MT_SKIN_SERVER_OAUTH_GITHUB_CLIENT_ID}
      - MT_SKIN_SERVER_OAUTH_GITHUB_CLIENT_SECRET=${MT_SKIN_SERVER_OAUTH_GITHUB_CLIENT_SECRET}
      - MT_SKIN_SERVER_FRONTEND_DEV_MODE=false
      - MT_SKIN_SERVER_VERIFICATION_GOOGLE_SEARCH_CONSOLE=${MT_SKIN_SERVER_VERIFICATION_GOOGLE_SEARCH_CONSOLE}
    ports:
      - "8080:8080"
    depends_on:
      - db

volumes:
  db:
